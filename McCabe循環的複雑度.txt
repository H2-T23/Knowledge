# McCabe循環的複雑度
循環的複雑度とは、モジュールの構造上の複雑さの測定値のことです。
複数の研究によると、プログラムの循環的複雑度、およびその保守性とテスト容易性の間には相関関係があり、
複雑度が高いファイルでは、ソースコードの修正、拡張、またはリファクタリング時にエラーが発生する可能性が
高いことが示されています。

次に示すように、選択された閾値は、ソフトウェア工学研究所によって確立されたカテゴリに基づいています。

循環的複雑度	リスク評価
1-10			ほとんどリスクのない簡単なモジュール
11-20			中程度のリスクを伴うより複雑なモジュール
21-50			高リスクを伴う複雑なモジュール
51以上			非常に高いリスクを伴うテスト不可のプログラム

集約は、選択されたモデルでの定義されているように選択された構造による影響を受け、
構造プリセットによって定義されているようにスコープによる影響を受けます。

循環的複雑度は、次のように計算されます。

循環的複雑度 = (1 + ifs + loops + cases)

	ifsは、関数のIF演算子の数です。
	loopsは、関数のループの数です。
	casesは、関数のスイッチブランチの数(デフォルトなし)です。

簡単なプログラムとその循環的複雑度メトリックの疑似コードをいかに示します。

	Function
		While
			if
			Else
			Endif
		Endwhile
	End Function

if演算子が１つ、loop演算子が1つあるため、循環的複雑度メトリックは、１＋１＋１＝３として計算できます。


